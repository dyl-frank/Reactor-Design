import numpy as np
import pickle
import os

data = {}

#
data["rho_fuel"]            = 19.0
data["OD_fuel"]             = 6.35 # Fuel + cladding outer diameter
data["Th_clad"]             = 0.04 # Clad thickness
data["delta_core"]          = 20.0 # Extrapolation corection for core dimensions
data["p_th"]                = 1.2e9  # Thermal power

# phi_{n}/phi_ce    l [g1,g2, ..., g8]
data["phi_fuel_ratio"]      = np.array([1.60, 1.60, 1.60, 1.45, 1.45, 1.34, 1.34, 1.34 ])
data["phi_clad_ratio"]      = np.array([1.01, 1.01, 1.01, 1.02, 1.02, 1.03, 1.03, 1.03 ])
data["phi_cool_ratio"]      = np.array([0.90, 0.90, 0.91, 0.91, 0.91, 0.94, 0.94, 0.94 ])

# Energy structure (eV)
data["lethargy_width"]      = np.array([1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 0.0])
data["lower_energy_bounds"] = np.array([2.2e6, 820e3, 300e3, 110e3, 40e3, 15e3, 750, 0])

# Cross sections (b)
data["sigma_tr_pb"]         = np.array([1.5, 2.2, 3.6, 3.5, 4.0, 3.9, 7.3, 3.2 ])
data["sigma_ng_pb"]         = np.array([0.0050, 0.0002, 0.0004, 0.0010, 0.0010, 0.0010, 0.0090, 0.0080]) #capture
data["sigma_f_pb"]          = np.array([0 for _ in range(8)])
data["sigma_r_pb"]          = np.array([0.623 , 0.6908, 0.4458, 0.2900, 0.3500, 0.3000, 0.0400, 0.0000])
data["nu_f_pb"]             = np.array([0 for _ in range(8)])
    
data["sigma_tr_fe"]         = np.array([2.2, 2.1, 2.4, 3.1, 4.5, 6.1, 6.9, 10.4])
data["sigma_ng_fe"]         = np.array([0.0200, 0.0030, 0.0050, 0.0060, 0.0080, 0.0120, 0.0320, 0.0200])
data["sigma_f_fe"]          = np.array([0 for _ in range(8)])
data["sigma_r_fe"]          = np.array([1.0108, 0.4600, 0.1200, 0.1400, 0.2800, 0.0700, 0.0400, 0.0])
data["nu_f_fe"]             = np.array([0 for _ in range(8)])

data["sigma_tr_u38"]        = np.array([4.3, 4.8, 6.3, 9.3, 11., 12., 13.1, 11.0])
data["sigma_ng_u38"]        = np.array([0.0100, 0.0900, 0.1100, 0.1500, 0.2600, 0.4700, 0.8400, 1.4700])
data["sigma_f_u38"]         = np.array([0.58, 0.20, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00])
data["sigma_r_u38"]         = np.array([2.293, 1.490, 0.375, 0.293, 0.200, 0.090, 0.0100, 0.0000])
data["nu_f_u38"]            = np.array([2.91, 2.58, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])


data["sigma_tr_pu39"]       = np.array([4.5, 5.1, 6.3, 8.6, 11., 13., 16., 31.8])
data["sigma_ng_pu39"]       = np.array([0.0100, 0.0300, 0.1100, 0.2000, 0.3500, 0.5900, 1.9800, 8.5400])
data["sigma_f_pu39"]        = np.array([1.85, 1.82, 1.60, 1.51, 1.60, 1.67, 2.78, 10.63])
data["sigma_r_pu39"]        = np.array([1.4950, 0.8260, 0.3709, 0.1905, 0.1500, 0.0900, 0.0100, 0.0000])
data["nu_f_pu39"]           = np.array([3.40, 3.07, 2.95, 2.90, 2.88, 2.88, 2.87, 2.87])

# Scattering matrices. Row is g, column in g', in-scattering is 0 as it is accounted for in removal xs
data["sigma_ss_pb"]         = np.array([[0.0000, 0.5200, 0.0900, 0.0030, 0.0090, 0.0010, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.6900, 0.0000, 0.0004, 0.0004, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.4400, 0.0050, 0.0008, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.2900, 0.0000, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3500, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0400],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]])


data["sigma_ss_fe"]         = np.array([[0.0000, 0.7500, 0.2000, 0.5000, 0.0100, 0.0008, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.3300, 0.1000, 0.0200, 0.0100, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.1200, 0.0000, 0.0000, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.1400, 0.0000, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.2800, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0700, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0400],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]])


data["sigma_ss_u38"]        = np.array([[0.0000, 1.2800, 0.7800, 0.2000, 0.0300, 0.0030, 0.0000, 0.0000],
                                [0.0000, 0.0000, 1.0500, 0.4200, 0.0100, 0.0100, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.3300, 0.0400, 0.0050, 0.0009, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.2900, 0.0030, 0.0005, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1800, 0.0200, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0900, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0100],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]])


data["sigma_ss_pu39"]       = np.array([[0.0000, 0.6600, 0.6000, 0.1900, 0.0400, 0.0050, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.6400, 0.1500, 0.0300, 0.0060, 0.0000, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.3100, 0.0500, 0.0100, 0.0009, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.1800, 0.0100, 0.0005, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1300, 0.0200, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0900, 0.0000],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0100],
                                [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],])

with open(os.path.join(os.path.dirname(os.path.abspath(__file__)),"data.pkl"), "wb") as f:
    pickle.dump(data, f)

print(data)